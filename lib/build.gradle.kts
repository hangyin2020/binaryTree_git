/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */
import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    
    // Checkstyle 
    checkstyle
    //
    // Code Coverage 
    jacoco
    
    // SpotBugs
    id("com.github.spotbugs") version "6.0.22"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


checkstyle { 
   val archive = configurations.checkstyle.get().resolve().filter {
        it.name.startsWith("checkstyle")
    }
    config = resources.text.fromArchiveEntry(archive, "google_checks.xml")
}
tasks.test {
    finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}
tasks.jacocoTestReport {
    dependsOn(tasks.test) // tests are required to run before generating the report
}

spotbugs { 
    showProgress = true 
    showStackTraces = true 
    effort = Effort.MAX
    reportLevel = Confidence.LOW
}
// require Gradle 8.2+
tasks.spotbugsMain {
    reports.create("html") {
        required = true
        reportsDir = file("${buildDir}/reports/spotbugs/spotbugs.html")
        setStylesheet("fancy-hist.xsl")
    }
}